*Determine whether to merge Properties and Relationships into one (no, but improve the API)
*Graph -> Show label
*Add "All Properties" property which gives all properties of inheritance chain
*Add "GetValue" function which returns value of property
*Need a better way to edit the tt file
(cancelled)Add _NodeTypes, _Nodes, etc entity sets to graph context
*Entity references should return the raw type instead of the interface
*Check which processes are running the DB, close xdesproc if it is running it
*Add RDF URI metadata to NodeTypes
*Graph -> Show node property data on hover

*Go back to the interface style of models.  It's better that way because non-interface variables should be reserved 
*for sections that interact with the underlying DB.

*Fix working directory
*Fix importing/exporting

*1. Add a non-embedded seed mirror
*2. Connect to non-embedded version over rest
3. Build sparql queries
4. Use sparql queries for base api to get related values
5. Use api to load a few nodes / edges
6. Debug the edge drawing to not be biased to vertical sides

Display Graph
 *Add zoom in/out
 *Draw Edges / Connections
 *Move edge endpoints based on whether they are outgoing or incoming
 Edge endpoints are too heavily biased to appear on vertical sides of the node
 Recalculate only the edges that moved
 Add filters
 Add color legend
 Add right click context menu with sticky node details option

 Set permissions on "System" properties, make them read-only